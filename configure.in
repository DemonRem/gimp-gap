dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.52)
AC_INIT(configure.in)
AM_CONFIG_HEADER(config.h)

GAP_MAJOR_VERSION=2
GAP_MINOR_VERSION=2
GAP_MICRO_VERSION=0
GAP_VERSION=$GAP_MAJOR_VERSION.$GAP_MINOR_VERSION.$GAP_MICRO_VERSION

VERSION=$GAP_VERSION

AC_SUBST(GAP_MAJOR_VERSION)
AC_SUBST(GAP_MINOR_VERSION)
AC_SUBST(GAP_MICRO_VERSION)
AC_SUBST(GAP_VERSION)
	
AC_DEFINE_UNQUOTED(GAP_MAJOR_VERSION, $GAP_MAJOR_VERSION, [gimp-gap major release number])
AC_DEFINE_UNQUOTED(GAP_MINOR_VERSION, $GAP_MINOR_VERSION, [gimp-gap minor release number])
AC_DEFINE_UNQUOTED(GAP_MICRO_VERSION, $GAP_MICRO_VERSION, [gimp-gap micro release number])


GETTEXT_PACKAGE=gimp20-gap
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",
                   [The gettext translation domain.])

AM_INIT_AUTOMAKE(gimp-gap, $VERSION)

AM_MAINTAINER_MODE

AC_PROG_CC
AC_ISC_POSIX
AM_PROG_CC_STDC
AC_HEADER_STDC

AC_PROG_RANLIB

ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_CHECK_HEADERS(unistd.h)
AC_CHECK_FUNCS(bind_textdomain_codeset)


PKG_CHECK_MODULES(GIMP, gimp-2.0 >= 2.2.0 gimpui-2.0 >= 2.2.0 gimpthumb-2.0)

GIMP_DATA_DIR=`$PKG_CONFIG gimp-2.0 --variable=gimpdatadir`
GIMP_PLUGIN_DIR=`$PKG_CONFIG gimp-2.0 --variable=gimplibdir`

AC_SUBST(GIMP_DATA_DIR)
AC_SUBST(GIMP_PLUGIN_DIR)

dnl Test for unix-frontends
dnl -----------------------
AC_ARG_ENABLE(unixfrontends,
              [  --disable-unix-frontends     don't build with UNIX specific frontends for mplayer, xanim and mpeg encoders])
  if test "x$enable_unix_frontends" != "xno"; then
    frontends_warning="
gimp-gap is configured with Linux/UNIX specific frontends for xanim
and mpeg encoders. Non Linux/UNIX users should run configure with
the --disable-unix-frontends option.
"
  else
    frontends_warning="
The Linux/UNIX specific frontends for xanim and mpeg encoders will
not be built. This is OK for non Linux/UNIX users.
"
  fi

AM_CONDITIONAL(GAP_UNIX_FRONTENDS, test "x$enable_unix_frontends" != "xno")



dnl Test for videoapisupport
dnl ------------------------
AC_ARG_ENABLE(videoapisupport,
              [  --disable-videoapi-support   don't build with videoapi support])
  if test "x$enable_videoapi_support" != "xno"; then
    AC_DEFINE(GAP_ENABLE_VIDEOAPI_SUPPORT, 1,
              [Define to 1 to enable videoapi support])
  else
        videoapi_warning="
gimp-gap is configured without video API (libgapvidapi.a)
   There will be NO access to videofiles (mpeg, avi...) in the storyboard
   plug-in and the videoextract plug-in will not work at all.
   To compile with video API run configure with
   the --enable-videoapi-support option.
"

  fi

AM_CONDITIONAL(GAP_VIDEOAPI_SUPPORT, test "x$enable_videoapi_support" != "xno")


dnl get name of current and parent dir
pwd_dir=`pwd`
cd ..
parent_dir=`pwd`
cd "$pwd_dir"
extern_libs_dir="$pwd_dir/extern_libs"

dnl Test for video libavformat (FFMPEG)
dnl -----------------------------------
dnl the ffmpeg libs are both used as decoder implementations in the GAP Video API (GVA)
dnl and in the ffmpeg videoencoder  plug-in
dnl ffmpeg should compile on many operating systems, including UNIX and WINDOWS systems
dnl
dnl the current gimp-gap preferes static linking with ffmpeg (versions 0.4.8 upto recent CVS versions)
dnl therefore the ffmpeg sourcetree should be specified --with-ffmpegdir=DIR
dnl a permanent ffmpeg installation is not required in that case, but the libraries 
dnl   libavformat.a and libavcodec.a
dnl must be already built there. 
dnl
dnl
FFMPEG_DIRNAME="ffmpeg"
FFMPEG_TARBALL="$extern_libs_dir/ffmpeg.tar.gz"

dnl where to find the ffmpeg sourcedir (expanded ffmpeg tarball)
FFMPEG_DIR="$extern_libs_dir/$FFMPEG_DIRNAME"

AC_ARG_WITH(ffmpegsrcdir, [  --with-ffmpegsrcdir=DIR      specify where to find ffmpeg src directory DIR],
if eval "test x$with_ffmpegsrcdir != x"; then
  if eval "test x$with_ffmpegsrcdir != xyes"; then
    if test -d "$with_ffmpegsrcdir"; then
      FFMPEG_DIR=$with_ffmpegsrcdir
    else
      echo "** ERROR option --with-ffmpegsrcdir must refere to a directory"
      echo "** $with_ffmpegsrcdir  is not a directory"
    fi
  fi
fi)


dnl assume ffmpeg libs build "no" (in case disabled)
build_ffmpeg_libs_yesno="no"


AC_ARG_ENABLE(libavformat,
              [  --disable-libavformat        don't build with libavformat/libavcodec])
  if test "x$enable_libavformat" != "xno"; then
    dnl

    AC_DEFINE(ENABLE_GVA_LIBAVFORMAT, 1,
              [Define to 1 to enable compile and link with libavformat])
    dnl
    if test -d "$FFMPEG_DIR"; then
      dnl
      echo "FFMPEG sourcetree found at dir: $FFMPEG_DIR"
    else
      if test -f "$FFMPEG_TARBALL"; then
        cd "$extern_libs_dir"
        echo "extracting tarball: $FFMPEG_TARBALL"
	gzip -d -c "$FFMPEG_TARBALL" | tar -x
	cd "$pwd_dir"
      else
        echo "** error FFMPEG tarball not found, file: $FFMPEG_TARBALL"
      fi
    fi
    dnl
    dnl
    if test -d "$FFMPEG_DIR"; then
      dnl
      echo "FFMPEG sourcetree found at dir: $FFMPEG_DIR"
      dnl
      dnl STATIC linking of the ffmpeg libs libavformat.a libavcodec.a
      dnl from sourcedirectory
      dnl
      dnl   sequence of libs does matter  1. libavformat.a  2. libavcodec.a 
      dnl  
      build_ffmpeg_libs_yesno="yes"
      FFMPEG_LIBAVFORMAT_A="$FFMPEG_DIR/libavformat/libavformat.a"
      FFMPEG_LIBAVCODEC_A="$FFMPEG_DIR/libavcodec/libavcodec.a"

      GAP_VLIBS_FFMPEG=" $FFMPEG_LIBAVFORMAT_A $FFMPEG_LIBAVCODEC_A "
      GAP_VINCS_FFMPEG=" -I$FFMPEG_DIR/libavcodec -I$FFMPEG_DIR/libavformat -I$FFMPEG_DIR/libavutil "

      vid_ffmpeg_warning=""

      dnl read configure options for the external lib from a file      
      dnl the current simple implementation requires all options in one line
      FFMPEG_CONFIGURE_OPTIONS=`cat "$extern_libs_dir/configure_options_ffmpeg.txt"`

      echo "================================="
      echo "Calling FFMPEG configure script optins: $FFMPEG_CONFIGURE_OPTIONS"
      echo "================================="
      
      cd "$FFMPEG_DIR"
      ./configure $FFMPEG_CONFIGURE_OPTIONS
      cd "$pwd_dir"
      
      echo "================================="
      echo "FFMPEG configure script done optins: $FFMPEG_CONFIGURE_OPTIONS"
      echo "================================="
      
      dnl
      dnl
    else
      vid_ffmpeg_warning="
** ERROR: ffmpeg sourcetree was not found at:       
$FFMPEG_DIR

  this directory should be created automatically by extracting
  the tarball $FFMPEG_TARBALL

  if this tarball is not included in your gimp-gap distribution
  you can get the ffmpeg tarball at:
  http://ffmpeg.sourceforge.net.
  
  The configure option --disable-libavformat was activated due to this ERROR.
  (This reduces the number of supported videoformats both for read and write
   access.)

"
      dnl options for dynamic linking. (currently not supported via configure script)
      dnl GAP_VINCS_FFMPEG=" -I/usr/include/ffmpeg"
      dnl GAP_VLIBS_FFMPEG=" -lavcodec -lavformat"
      dnl
    fi
  else
        vid_ffmpeg_warning="
gimp-gap is configured without libavformat
   This reduces the number of supported videoformats both for read and write
   access. libavformat and libavcodec are part of $FFMPEG_DIRNAME.
 
Warning: checks for libavformat and libavcodec are not implemented yet.
You can get ffmpeg at: http://ffmpeg.sourceforge.net.
"
        GAP_VLIBS_FFMPEG=" "
        GAP_VINCS_FFMPEG=" "
  fi

AM_CONDITIONAL(ENABLE_GVA_LIBAVFORMAT_SUPPORT, test "x$enable_libavformat" != "xno")


dnl Test for video libmpeg3
dnl ------------------------
dnl libmpeg3 is used in one of the decoder implementations in the GAP
dnl Video API (GVA) as far as i know this lib is available only on
dnl UNIX systems dnl the current gimp-gap includes the libmpeg3-1.5.4
dnl as (unmaintained) sourcetree and calls the libmpeg3 configure
dnl script.  The generated Makefile will call the libmpeg3 original
dnl Makefile to build the library libmpeg3.a linking with gimp-gap
dnl modules is now done statically.
dnl
REQ_LIBMPEG3_VERSION="1.5.4"


dnl where to find the libmpeg3 sourcedir
LMPEG3_DIR="$extern_libs_dir/libmpeg3"
LIBMPEG3_TARBALL="$extern_libs_dir/libmpeg3.tar.gz"

AC_ARG_WITH(libmpeg3srcdir, [  --with-libmpeg3srcdir=DIR    specify where to find libmpeg3 src directory DIR],
if eval "test x$with_libmpeg3srcdir != x"; then
  if eval "test x$with_libmpeg3srcdir != xyes"; then
    if test -d "$with_libmpeg3srcdir"; then
      LMPEG3_DIR=$with_libmpeg3srcdir
    else
      echo "** ERROR option --with-libmpeg3srcdir must refere to a directory"
      echo "** $with_libmpeg3srcdir  is not a directory"
    fi
  fi
fi)


dnl assume libmpeg3 build "no" (in case disabled)
build_libmpeg3_lib_yesno="no"

AC_ARG_ENABLE(libmpeg3,
              [  --disable-libmpeg3           don't build with libmpeg3])
  if test "x$enable_libmpeg3" != "xno"; then

    dnl
    dnl the original tarball from http:www.heroinewarrior.com of
    dnl libmpeg3-1.5.4 comes without installation help for the library
    dnl and its headers.  but (some ?) LINUX distributors provide
    dnl installation rpm packages for libmpeg3
    dnl
    dnl some older libmpeg3-1.5 rpm packages (from my SuSE 8.2
    dnl distribution) are NOT compatible with the new API, and have
    dnl limited functions -- AC3 is turned off -- other packages (like
    dnl the current debian) disable CSS decryption.
    dnl
    dnl one solution to face those problems is to get the tarball with
    dnl the full sourcetree of the libmpeg3-1.5.4 library configure
    dnl and make the libmpeg3 from sourcetree and then link statically
    dnl by specifying the option --with-libmpeg3srcdir.
    dnl
    dnl libmpeg3 needs the assembler nasm to compile and checks this
    dnl requirement in its configuration script.
    dnl

    machine_dependent_odir=`uname --machine`
    dnl
    if test -d "$LMPEG3_DIR"; then
      dnl
      echo "libmpeg3 sourcetree found at dir: $LMPEG3_DIR"
    else
      if test -f "$LIBMPEG3_TARBALL"; then
        cd "$extern_libs_dir"
	echo "extracting tarball: $LIBMPEG3_TARBALL"
	gzip -d -c "$LIBMPEG3_TARBALL" | tar -x
	cd "$pwd_dir"
      else
        echo "** error LIBMPEG3 tarball not found, file: $LIBMPEG3_TARBALL"
      fi
    fi
    dnl
    if test -d "$LMPEG3_DIR"; then
      dnl
      echo "LIBMPEG3 sourcetree found at dir: $LMPEG3_DIR"
      dnl
      build_libmpeg3_lib_yesno="yes"
      LMPEG3_A="$LMPEG3_DIR/$machine_dependent_odir/libmpeg3.a"
      dnl
      GAP_VLIBS_MPEG3=" $LMPEG3_A "
      GAP_VINCS_MPEG3=" -I$LMPEG3_DIR -I$LMPEG3_DIR/audio -I$LMPEG3_DIR/video "
      AC_DEFINE(ENABLE_GVA_LIBMPEG3, 1,
           [Define to 1 to enable compile and link with libmpeg3])
      
      dnl read configure options for the external lib from a file      
      dnl the current simple implementation requires all options in one line
      LIBMPEG3_CONFIGURE_OPTIONS=`cat "$extern_libs_dir/configure_options_libmpeg3.txt"`

      echo "================================="
      echo "Calling LIBMPEG3 configure script optins: $LIBMPEG3_CONFIGURE_OPTIONS"
      echo "================================="
      

      
      cd "$LMPEG3_DIR"
      ./configure $LIBMPEG3_CONFIGURE_OPTIONS
      cd "$pwd_dir"
      
      echo "================================="
      echo "LIBMPEG3 configure script done optins: $LIBMPEG3_CONFIGURE_OPTIONS"
      echo "================================="

      dnl
    else
      GAP_VLIBS_MPEG3=" "
      GAP_VINCS_MPEG3=" "
      vid_mpeg3_warning="
** ERROR: libmpeg3 source directory was not found at:
$LMPEG3_DIR

  this directory should be created automatically by extracting
  the tarball $LIBMPEG3_TARBALL

  if this tarball is not included in your gimp-gap distribution
  you can get the source tarball libmpeg3-$REQ_LIBMPEG3_VERSION at:
  http://www.heroinewarrior.com/download.php3
  
  The configure option --disable-libmpeg3 was activated due to this ERROR.
  (This reduces the number of supported videoformats for read access.
   access.)

"
    fi  
  else
    if test "x$enable_videoapi_support" != "xno"; then
        vid_mpeg3_warning="
gimp-gap is configured without libmpeg3
   This reduces the number of supported videoformats for read access.
   You can get libmpeg3-$REQ_LIBMPEG3_VERSION at: 
   http://www.heroinewarrior.com/download.php3
"
      GAP_VLIBS_MPEG3=" "
      GAP_VINCS_MPEG3=" "
    fi
  fi

AM_CONDITIONAL(ENABLE_GVA_LIBMPEG3_SUPPORT, test "x$enable_libmpeg3" != "xno")



dnl Test for XVID codec
dnl ------------------------
dnl the xvid codec lib is used in the AVI videoencoder plug-in for
dnl MPEG4 support xvid should compile on many operating systems,
dnl including UNIX and WINDOWS systems (ffmpeg has its own builtin
dnl MPEG4 codec implementation and does not depend on this codec)
dnl
AC_ARG_ENABLE(libxvidcore,
              [  --disable-libxvidcore        don't build with libxvidcore])
  if test "x$enable_libxvidcore" != "xno"; then
    dnl
    dnl check for libxvidcore 1.0.0
    dnl
    xvid_err=""
    AC_CHECK_LIB(xvidcore, xvid_encore,
      [AC_CHECK_HEADER(xvid.h,
        GAP_VLIBS_XVIDCORE=" -lxvidcore",
        xvid_err="xvid header file (xvid.h) not found")],
      xvid_err="xvid library (libxvidcore) not found")

    if test "x$xvid_err" = "x"; then
      AC_DEFINE(ENABLE_LIBXVIDCORE, 1,
                [Define to 1 to enable compile and link with libxvidcore])
      GAP_VLIBS_XVIDCORE=" -lxvidcore"
      dnl GAP_VINCS_XVIDCORE=" -I/usr/local/include"
    else
        vid_xvidcore_warning="
** WARNING: $xvid_err
   The AVI encoder plug-in is built without MPEG4 support.
   You can get the xvid codec at:  http://www.xvid.org/downloads.html
"
        GAP_VLIBS_XVIDCORE=" "
        GAP_VINCS_XVIDCORE=" "
    fi
  else
        vid_xvidcore_warning="
gimp-gap is configured without libxvidcore
   The AVI encoder plug-in is built without MPEG4 support.
   You can get the xvid codec at:  http://www.xvid.org/downloads.html
"
        GAP_VLIBS_XVIDCORE=" "
        GAP_VINCS_XVIDCORE=" "

  fi

AM_CONDITIONAL(ENABLE_LIBXVIDCORE_SUPPORT, test "x$enable_libxvidcore" != "xno")


AC_SUBST(GAP_VLIBS_FFMPEG)
AC_SUBST(GAP_VINCS_FFMPEG)
AC_SUBST(GAP_VLIBS_MPEG3)
AC_SUBST(GAP_VINCS_MPEG3)
AC_SUBST(GAP_VLIBS_XVIDCORE)
AC_SUBST(GAP_VINCS_XVIDCORE)

AC_SUBST(FFMPEG_DIR)
AC_SUBST(FFMPEG_LIBAVFORMAT_A)
AC_SUBST(FFMPEG_LIBAVCODEC_A)
AC_SUBST(LMPEG3_DIR)
AC_SUBST(LMPEG3_A)

GAPVIDEOAPI_EXTLIBS="$GAP_VLIBS_FFMPEG $GAP_VLIBS_MPEG3 -lpng -lz -lpthread -ldl -lm"
GAPVIDEOAPI_EXTINCS="$GAP_VINCS_FFMPEG $GAP_VINCS_MPEG3"
AC_SUBST(GAPVIDEOAPI_EXTLIBS)
AC_SUBST(GAPVIDEOAPI_EXTINCS)




dnl Test for audiosupport
dnl ------------------------
AC_ARG_ENABLE(audiosupport,
              [  --disable-audio-support      don't build with audio support])
  if test "x$enable_audio_support" != "xno"; then
    AC_CHECK_PROG(WAVPLAY_SERVER, wavplay, yes, no)
      if test $WAVPLAY_SERVER = no; then
        audio_warning="
Audio support will be compiled in but will not work because the wavplay
executable was not found. For audio support the wavplay audioserver must
be installed at runtime.
"
      fi

    AC_DEFINE(GAP_ENABLE_AUDIO_SUPPORT, 1,
              [Define to 1 to enable audio support])
  fi

AM_CONDITIONAL(GAP_AUDIO_SUPPORT, test "x$enable_audio_support" != "xno")

dnl optional compile preview widget with GDK-pixbuf support
dnl 
AC_ARG_ENABLE(gdkpixbuf,
              [  --enable-gdkpixbuf-pview     use GdkPixbuf thumbnail rendering (default=no)])
  if test "x$enable_gdkpixbuf_pview" = "xyes"; then
    AC_DEFINE(GAP_PVIEW_USE_GDK_PIXBUF_RENDERING, 1,
              [use Gdk for Pixbuf rendering in gap preview widget])
  fi



AM_CONDITIONAL(BUILD_FFMPEG_LIBS, test "x$build_ffmpeg_libs_yesno" != "xno")
AM_CONDITIONAL(BUILD_LIBMPEG3_LIB, test "x$build_libmpeg3_lib_yesno" != "xno")


GAPLIBDIR=${libdir}/$PACKAGE-$GAP_MAJOR_VERSION.$GAP_MINOR_VERSION

ALL_LINGUAS="az ca cs da de el en_GB es eu fi fr gu hi hr hu it ja ko lt ml ne nl nn no pa pl pt pt_BR ru rw sk sl sq sr sr@Latn sv tr uk zh_CN zh_TW"

AC_PROG_INTLTOOL
AM_GLIB_GNU_GETTEXT

LOCALEDIR='${datadir}/locale'


dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

CPPFLAGS="$CPPFLAGS -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED -DGIMP_DISABLE_DEPRECATED"

AC_SUBST(GAPLIBDIR)
AC_SUBST(LOCALEDIR)
AC_SUBST(BUILD_FFMPEG_LIBS)
AC_SUBST(BUILD_LIBMPEG3_LIB)

AC_OUTPUT([
Makefile
extern_libs/Makefile
images/Makefile
gap/Makefile
libwavplayclient/Makefile
libgapvidapi/Makefile
libgapvidutil/Makefile
vid_common/Makefile
vid_enc_avi/Makefile
vid_enc_ffmpeg/Makefile
vid_enc_single/Makefile
po/Makefile.in
docs/Makefile
docs/howto/Makefile
docs/howto/txt/Makefile
docs/reference/Makefile
docs/reference/txt/Makefile
])

AC_MSG_RESULT($frontends_warning $audio_warning $videoapi_warning $vid_ffmpeg_warning $vid_mpeg3_warning $vid_quicktime_warning $vid_xvidcore_warning)
