dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.52)
AC_INIT(configure.in)
AM_CONFIG_HEADER(config.h)

GAP_MAJOR_VERSION=1
GAP_MINOR_VERSION=3
GAP_MICRO_VERSION=20
GAP_VERSION=$GAP_MAJOR_VERSION.$GAP_MINOR_VERSION.$GAP_MICRO_VERSION

VERSION=$GAP_VERSION

GETTEXT_PACKAGE=gimp20-gap
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",
                   [The gettext translation domain.])

AM_INIT_AUTOMAKE(gimp-gap, $VERSION)

AC_PROG_CC
AC_ISC_POSIX
AM_PROG_CC_STDC
AC_HEADER_STDC

ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_CHECK_HEADERS(unistd.h)
AC_CHECK_FUNCS(bind_textdomain_codeset)

AM_MAINTAINER_MODE

AM_PATH_GIMP_2_0(1.3.20, , AC_MSG_ERROR(Cannot find GIMP-2.0.))


dnl Test for unix-frontends
AC_ARG_ENABLE(unixfrontends,
              [  --disable-unix-frontends    don't build with UNIX specific frontends for xanim and mpeg encoders])
  if test "x$enable_unix_frontends" != "xno"; then
    frontends_warning="
gimp-gap is configured with Linux/UNIX specific frontends for xanim
and mpeg encoders. Non Linux/UNIX users should run configure with
the --disable-unix-frontends option.
"
  else
    frontends_warning="
The Linux/UNIX specific frontends for xanim and mpeg encoders will
not be built. This is OK for non Linux/UNIX users.
"
  fi

AM_CONDITIONAL(GAP_UNIX_FRONTENDS, test "x$enable_unix_frontends" != "xno")


dnl Test for audiosupport
AC_ARG_ENABLE(audiosupport,
              [  --disable-audio-support      don't build with audio support])
  if test "x$enable_audio_support" != "xno"; then
    AC_CHECK_PROG(WAVPLAY_SERVER, wavplay, yes, no)
      if test $WAVPLAY_SERVER = no; then
        audio_warning="
Audio support will be compiled in but will not work because the wavplay
executable was not found. For audio support the wavplay audioserver must
be installed at runtime.
"
      fi

    AC_DEFINE(GAP_ENABLE_AUDIO_SUPPORT, 1, [Define to 1 to enable audio support])
  fi

AM_CONDITIONAL(GAP_AUDIO_SUPPORT, test "x$enable_audio_support" != "xno")


GAPLIBDIR=${libdir}/$PACKAGE-$GAP_MAJOR_VERSION.$GAP_MINOR_VERSION
AC_SUBST(GAPLIBDIR)
dnl AC_DEFINE_UNQUOTED(GAPLIBDIR, "$GAPLIBDIR", [The GAP library path])
dnl fixme: GAPLIBDIR should go into config.h but generates a line like this:
dnl #define GAPLIBDIR "${exec_prefix}/lib/gimp-gap-1.3"
dnl where the ${exec_prefix} is not expanded
dnl workaround: using -DGAPLIBDIR in CPPFLAGS
CPPFLAGS="$CPPFLAGS -DGAPLIBDIR=\\\"\"${GAPLIBDIR}\"\\\" "

ALL_LINGUAS="az ca cs da de el en_GB es fi fr hr hu it ja ko lt ml nl nn no pl pt pt_BR ru sk sl sv tr uk zh_CN zh_TW"
AM_GLIB_GNU_GETTEXT

LOCALEDIR='${prefix}/${DATADIRNAME}/locale'

AC_PROG_RANLIB

dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

CPPFLAGS="$CPPFLAGS -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED"

AC_SUBST(GAP_MAJOR_VERSION)
AC_SUBST(GAP_MINOR_VERSION)
AC_SUBST(GAP_VERSION)
	
AC_SUBST(LOCALEDIR)

AC_OUTPUT([
Makefile
images/Makefile
gap/Makefile
libwavplayclient/Makefile
po/Makefile.in
])

AC_MSG_RESULT($frontends_warning $audio_warning)
