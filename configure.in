dnl Process this file with autoconf to produce a configure script.

AC_PREREQ(2.54)

m4_define([gap_major_version], [1])
m4_define([gap_minor_version], [3])
m4_define([gap_micro_version], [27])
m4_define([gap_real_version],
          [gap_major_version.gap_minor_version.gap_micro_version])
m4_define([gap_version], [gap_real_version])

# For overriding the version string. Comment out if not needed.
m4_define([gap_version], [2.0pre1])
	

AC_INIT([GIMP Animation Package], [gap_version],
        [http://bugzilla.gnome.org/enter_bug.cgi?product=gimp-gap],
	[gimp-gap])

AC_CONFIG_SRCDIR([gap/gap_main.c])

AM_INIT_AUTOMAKE(no-define)
AM_CONFIG_HEADER(config.h)


AC_DEFINE_UNQUOTED(GAP_MAJOR_VERSION, gap_major_version,
	           [gimp-gap major release number])
AC_DEFINE_UNQUOTED(GAP_MINOR_VERSION, gap_minor_version,
	           [gimp-gap minor release number])
AC_DEFINE_UNQUOTED(GAP_MICRO_VERSION, gap_micro_version,
                   [gimp-gap micro release number])


GETTEXT_PACKAGE=gimp20-gap
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE",
                   [The gettext translation domain.])

AM_MAINTAINER_MODE

AC_PROG_CC
AC_ISC_POSIX
AM_PROG_CC_STDC
AC_HEADER_STDC

AC_PROG_RANLIB

ACLOCAL="$ACLOCAL $ACLOCAL_FLAGS"

AC_CHECK_HEADERS(unistd.h)
AC_CHECK_FUNCS(bind_textdomain_codeset)


PKG_CHECK_MODULES(GIMP, gimp-2.0 gimpui-2.0 gimpthumb-2.0)

AC_SUBST(GIMP_CFLAGS)
AC_SUBST(GIMP_LIBS)

GIMP_DATA_DIR=`$PKG_CONFIG gimp-2.0 --variable=gimpdatadir`
GIMP_PLUGIN_DIR=`$PKG_CONFIG gimp-2.0 --variable=gimplibdir`

AC_SUBST(GIMP_DATA_DIR)
AC_SUBST(GIMP_PLUGIN_DIR)


dnl Test for unix-frontends
AC_ARG_ENABLE(unix_frontends,
              [  --disable-unix-frontends      don't build with UNIX specific
                                frontends for xanim and mpeg encoders])
  if test "x$enable_unix_frontends" != "xno"; then
    frontends_warning="
gimp-gap is configured with Linux/UNIX specific frontends for xanim
and mpeg encoders. Non Linux/UNIX users should run configure with
the --disable-unix-frontends option.
"
  else
    frontends_warning="
The Linux/UNIX specific frontends for xanim and mpeg encoders will
not be built. This is OK for non Linux/UNIX users.
"
  fi

AM_CONDITIONAL(GAP_UNIX_FRONTENDS, test "x$enable_unix_frontends" != "xno")


dnl Test for audiosupport
AC_ARG_ENABLE(audio_support,
              [  --disable-audio-support       don't build with audio support])
  if test "x$enable_audio_support" != "xno"; then
    AC_CHECK_PROG(WAVPLAY_SERVER, wavplay, yes, no)
      if test $WAVPLAY_SERVER = no; then
        audio_warning="
Audio support will be compiled in but will not work because the wavplay
executable was not found. For audio support the wavplay audioserver must
be installed at runtime.
"
      fi

    AC_DEFINE(GAP_ENABLE_AUDIO_SUPPORT, 1, [Define to 1 to enable audio support])
  fi

AM_CONDITIONAL(GAP_AUDIO_SUPPORT, test "x$enable_audio_support" != "xno")

dnl optional compile preview widget with GDK-pixbuf support
dnl 
AC_ARG_ENABLE(gdkpixbuf_preview,
              [  --enable-gdkpixbuf-preview    use GdkPixbuf thumbnail rendering (default=no)])
  if test "x$enable_gdkpixbuf_preview" = "xyes"; then
    AC_DEFINE(GAP_PVIEW_USE_GDK_PIXBUF_RENDERING, 1,
              [use GDK for Pixbuf rendering in gap preview widget])
  fi


GAPLIBDIR=${libdir}/$PACKAGE-gap_major_version.gap_minor_version


ALL_LINGUAS="az ca cs da de el en_GB es fi fr hr hu it ja ko lt ml nl nn no pl pt pt_BR ru sk sl sr sr@Latn sv tr uk zh_CN zh_TW"

AC_PROG_INTLTOOL
AM_GLIB_GNU_GETTEXT

LOCALEDIR='${datadir}/locale'


dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

CPPFLAGS="$CPPFLAGS -DG_DISABLE_DEPRECATED -DGDK_DISABLE_DEPRECATED"

AC_SUBST(GAPLIBDIR)
AC_SUBST(LOCALEDIR)

AC_OUTPUT([
Makefile
images/Makefile
gap/Makefile
libwavplayclient/Makefile
po/Makefile.in
])

AC_MSG_RESULT($frontends_warning $audio_warning)
